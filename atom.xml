<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Elon&#39;s Blog</title>
  <icon>https://www.gravatar.com/avatar/da2a31f80eb8bc5c406ea77514ec1585</icon>
  <subtitle>Life-long learning</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-10-16T02:34:27.404Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Elon Hu</name>
    <email>768659569@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Notes about STM32</title>
    <link href="http://yoursite.com/2018/10/15/Notes-about-STM32/"/>
    <id>http://yoursite.com/2018/10/15/Notes-about-STM32/</id>
    <published>2018-10-15T02:09:31.000Z</published>
    <updated>2018-10-16T02:34:27.404Z</updated>
    
    <content type="html"><![CDATA[<p>​ On this note, I’m going to record some skills and something that require special attention when I was doing embedded projects. </p><hr><ol>  <li>    <p>Recommend a good MCU learning website <a href="http://www.waveshare.net/study/portal.php" target="_blank" rel="noopener">《微雪课堂》</a></p>  </li>  <li>    <p>If you want to calculate the size of a string you can use the following method</p>    <figure class="highlight plain">      <table>        <tr>          <td class="gutter">            <pre><span class="line">1</span><br><span class="line">2</span><br></pre>          </td>          <td class="code">            <pre><span class="line">#define COUNTOF(__BUFFER__)   (sizeof(__BUFFER__) / sizeof(*(__BUFFER__)))</span><br><span class="line">HAL_UART_Transmit(&amp;huart6, ch1, (COUNTOF(ch1) - 1), 55);</span><br></pre>          </td>        </tr>      </table>    </figure>  </li>  <li>    <p>We can use sprintf() to combine different strings or numbers into on string, this string should be in a arry with char type. Besides, we can whatch this artical <a href="http://blog.xuite.net/jesonchung/scienceview/93558472-sprintf%E7%94%A8%E6%B3%95%E8%A7%A3%E6%9E%90" target="_blank" rel="noopener">The different uses of sprintf()</a></p>    <figure class="highlight plain">      <table>        <tr>          <td class="gutter">            <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>          </td>          <td class="code">            <pre><span class="line">sprintf(buf, &quot;CH1: %4d  CH2: %4d  CH3: %4d  CH4: %4d  SW1: %1d  SW2: %1d \n&quot;, rc.ch1, rc.ch2, rc.ch3, rc.ch4, rc.sw1, rc.sw2);</span><br><span class="line">HAL_UART_Transmit(&amp;huart6, (uint8_t *)buf, (COUNTOF(buf) - 1), 55);</span><br><span class="line">HAL_Delay(50);</span><br></pre>          </td>        </tr>      </table>    </figure>  </li>  <li>    <p>STM32_UART_DMA_IDLE, If we want to use DMA and IDLE to recive data then we should open the IDLE interrupt and DMA reciver, what should noticed is that we can’t open the reciver interrupt of UART or it will always interrupt when reciving data. If UART don’t recive data for a moment time, which is the detection time of IDLE interrupt, then the timer will be shut down and the recive completion flag will be positioned, too.</p>    <p>About STM32_UART_DMA_IDLE we can read the following artical</p>    <blockquote>      <p><a href="http://www.eeworld.com.cn/mcu/article_2017100234926.html" target="_blank" rel="noopener">《STM32 USART串口DMA接收和发送模式》</a></p>      <p><a href="http://blog.chinaaet.com/weiqi7777/p/44283" target="_blank" rel="noopener">《STM32使用DMA加串口空闲中断接收数据》</a> Note: This one is well</p>      <p><a href="http://www.stmcu.org.cn/module/forum/thread-602761-1-1.html" target="_blank" rel="noopener">《Cube下实现串口+DMA+空闲中断接收不定长数据》</a></p>      <p><a href="https://www.jianshu.com/p/2aad70a49ef7" target="_blank" rel="noopener">《关于STM32空闲中断》</a></p>    </blockquote>  </li>  <li>    <p>How to config the CAN communication with STM32CubeMX. There are few points need to be noted.</p>    <p>About STM32_CAN I will make a detailed record later.</p>    <ol>      <li>        <p><strong>Baud rate.</strong> If your HCLK is 180, you can config Prescaler to 5, Time Quanta in Bit Segment 1 to 3 times, Time Quanta in Bit Segment 2 to 5 times and ReSynchronization Jump With to 1 time </p>      </li>      <li>        <p><strong>NVIC settings.</strong> Don’t forget to config the CAN_TX and CAN_RX interrupts, on this step, you will see two RX interrupts, RX0 and RX1, case CAN reciver contains two recive mailbox, we can associate the can reciver what we used with one of them.</p>      </li>      <li>        <p><strong>Filter setting.</strong> About this part I recommend this artical 《》</p>      </li>      <li>        <p><strong>Recive &amp; Send.</strong> This part is a little different between old version library and new version library(after v1.20), we can refrence the demo of HAL library. </p>      </li>      <li>        <p>There are some articals about CAN communication, which explained well.</p>        <blockquote>          <p><a href="http://www.waveshare.net/study/article-651-1.html" target="_blank" rel="noopener">《微雪课堂-STM32CubeMX系列教程12:控制器局域网络(CAN)》</a></p>          <p><a href="https://blog.csdn.net/flydream0/article/details/8148791" target="_blank" rel="noopener">《STM32之CAN – CAN ID过滤器分析》</a></p>          <p><a href="https://blog.csdn.net/flydream0/article/details/52317532" target="_blank" rel="noopener">《再谈STM32的CAN过滤器-bxCAN的过滤器的4种工作模式以及使用方法总结》</a> </p>        </blockquote>      </li>    </ol>    <p><strong>（Unfinished…）</strong></p>  </li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;​ On this note, I’m going to record some skills and something that require special attention when I was doing embedded projects. &lt;/p&gt;
&lt;hr
      
    
    </summary>
    
    
      <category term="Embedded" scheme="http://yoursite.com/tags/Embedded/"/>
    
  </entry>
  
  <entry>
    <title>How to Build Your Personal Website with Github and Hexo</title>
    <link href="http://yoursite.com/2018/10/14/How-to-Build-Your-Personal-Website-with-Github-and-Hexo/"/>
    <id>http://yoursite.com/2018/10/14/How-to-Build-Your-Personal-Website-with-Github-and-Hexo/</id>
    <published>2018-10-14T01:17:10.000Z</published>
    <updated>2018-10-16T15:37:57.853Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://i4.bvimg.com/664948/37baa8a0ef116dc3.png" alt="Markdown"></p><p>​ This is my first blog in this space, I want to record how I build my blog website. My blog is besed on Hexo which hosted on Github.</p><p>What is Hexo?</p><p><img src="http://i4.bvimg.com/664948/f4759fb81d26e542.png" alt="Markdown"></p><p>​ Before we started, I’m going to talk something about Hexo. Hexo is a static blog framework which besed on Node.js, it has no so much depend on and very convenient for useing. It can generate static web pages and host them on Github or Heroku. meanwhile, Hexo is also a open source project on Github – <a href="https://link.zhihu.com/?target=https%3A//github.com/hexojs/hexo" target="_blank" rel="noopener">hexojs/hexo</a>. If you want to learn more about Hexo, you can go to the official website of <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a>.As for Github, I think you can no longer be familiar with it, so I will not talk too much on this part, but if you want to learn more about Git, I recommend this aitical – <a href="https://www.cnblogs.com/tugenhua0707/p/4050072.html" target="_blank" rel="noopener">《Git使用教程》</a>. </p><p>I don’t want talk too much, so let’s get started.(In fact, I don’t know what to say, ha ha ha…)</p><p><strong>(Unfinished…)</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://i4.bvimg.com/664948/37baa8a0ef116dc3.png&quot; alt=&quot;Markdown&quot;&gt;&lt;/p&gt;
&lt;p&gt;​ This is my first blog in this space, I want to record
      
    
    </summary>
    
    
      <category term="Internet" scheme="http://yoursite.com/tags/Internet/"/>
    
  </entry>
  
</feed>
